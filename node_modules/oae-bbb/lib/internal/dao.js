Cassandra = require ('oae-util/lib/cassandra');


var createMeeting = exports.createMeeting = function (id, displayName, description,welcomeMessage, visibility, record, duration, callback){

	var query = 'INSERT INTO Meeting (id, description, displayName, welcomeMessage, password, visibility, record, duration) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?);';
	var pass= id.substr(id.length - 4);
	var params = [id, description, displayName, welcomeMessage, pass, visibility, record, duration];

	Cassandra.runQuery (query,params,function(err){
		if(err){
			return callback(err);
		}
		return callback(null);
	});

};

var getMeetings = exports.getMeetings = function (userID, callback){
	var mre = /^m/;
	var meetings=[];
	var allmeetings=[];
	var query = "SELECT * FROM AuthzMembers;";
	Cassandra.runQuery (query, null, function(err,data){
		if(err){
			return callback(err);
		}
		
		data.forEach(function(element){
			if(mre.exec(element["key"])){
				for(i=0 ; i< element.length; i++){
					if(element[i]["name"]== userID){
						meetings.push("'"+element["key"]+"'");
					}
				}
			}	
		});
		
		var meeting = getMeetingByID(meetings,function(meeting){
			console.log(meeting);
			return callback (null,meeting);
		});
		
		
	});
};

var getMeetingByID = function (meetingID, callback){
	
	var query = "SELECT * FROM Meeting WHERE id IN (" + meetingID + ");";
	
	Cassandra.runQuery (query, null, function(err,meeting){
		if(err){
			return callback(err);
		}
		return callback(meeting);
	});
};

var getPass = exports.getPass = function (meetingID, callback){

	var query = "SELECT password FROM Meeting WHERE id = '" + meetingID + "';";
	Cassandra.runQuery (query, null, function(err,pass){
		if(err){
			
			return callback(err);
		}
		
		return callback (null,pass);
	});
};

